{"version":3,"sources":["helpers/validate.js","components/register.js","helpers/func.js","components/login.js","components/home.js","components/pageRouter.js","App.js","serviceWorker.js","index.js"],"names":["Validate","password","arguments","length","undefined","lenRegex","RegExp","numRegex","symRegex","lowerRegex","upperRegex","fields","PasswordLength","ContainsSymbol","ContainsNumber","ContainsUpperCase","ContainsLowerCase","Valid","test","firstTwoChars","charAt","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sendEmail","receiver","subject","msg","axios","get","concat","then","response","console","log","data","handleSubmit","e","preventDefault","$","hide","email","refs","value","css","color","fontWeight","fontStyle","handleConfirmPasswordChange","ipAddress","state","status","post","setState","attempts","err","html","res","SaveDataInDb","localStorage","setItem","JSON","stringify","registered","catch","error","show","handleChange","val","cpassword","text","formValid","_this2","ajax","type","url","cache","success","ip","react_default","a","createElement","react_router","to","className","style","marginTop","padding","borderRadius","id","onSubmit","required","ref","placeholder","onChange","display","react_router_dom","textDecoration","Component","Login","sessionStorage","credentials","loginSuccess","getItem","parseInt","timeToWait","Date","now","retry","timeWaiting","getMinutes","timeLeft","Home","loggedIn","Logout","bind","assertThisInitialized","parse","clear","float","onClick","_id","listStyleType","PageRouter","exact","path","component","App","react","pageRouter_PageRouter","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.070a4781.chunk.js","sourcesContent":[" function Validate ( password,  email = '' ) {\r\n    const lenRegex = new RegExp(`^.*(?=.{16}).*$`)\r\n    const numRegex = new RegExp(`^.*(?=(.*[0-9]){3,}).*$`)\r\n    const symRegex = new RegExp(`^.*(?=(.*[!@#$%&*~|? \"]){2,}).*$`)\r\n    const lowerRegex = new RegExp(`^.*(?=(.*[a-z]){1,}).*$`)\r\n    const upperRegex = new RegExp(`^(?=(.*[A-Z]){2,}).*$`)\r\n    let fields = {\r\n        PasswordLength: '',\r\n        ContainsSymbol: '',\r\n        ContainsNumber: '',\r\n        ContainsUpperCase: '',\r\n        ContainsLowerCase: '',\r\n        Valid: true\r\n    }\r\n\r\n    // Defining validation rules\r\n    if(!lenRegex.test(password))\r\n    {\r\n        fields.PasswordLength = 'Password length should be exactly 16 characters'\r\n        fields.Valid = false\r\n    }\r\n\r\n    //if(password.search(/[\\W\\S]/) !== 2)\r\n    if(!symRegex.test(password))\r\n    {\r\n        fields.ContainsSymbol= 'password must contain 2 symbols'\r\n        fields.Valid = false\r\n    }\r\n      \r\n    // if (password.search(/[0-9]/) !== 3)\r\n    if (!numRegex.test(password))\r\n    {\r\n        fields.ContainsNumber= 'password must contain 3 numbers'\r\n        fields.Valid = false\r\n    }\r\n      \r\n    //if(password.search(/[a-z]/g) < 0)\r\n    if(!lowerRegex.test(password))\r\n    {\r\n        fields.ContainsLowerCase = 'password must contain a lowercase letter';\r\n        fields.Valid = false\r\n    }\r\n    \r\n    //if(!upperRegex.test(password.charAt(0)) && !upperRegex.test(password.charAt(1)))\r\n    let firstTwoChars = password.charAt(0) + password.charAt(1);\r\n    if(!upperRegex.test(firstTwoChars))\r\n    {\r\n        fields.ContainsUpperCase ='The first 2 chars must be upper case letters';\r\n        fields.Valid = false\r\n    }\r\n\r\n    return fields\r\n  \r\n    //   if(this.state.attempts >= 3){\r\n    //     // check if ipaddress is the same\r\n    //     if(this.getIPAddress() === this.state.ipAddress && email === this.state.email){\r\n    //       this.setState({retry: 'Please retry in 5 minutes time'})\r\n    //       const timeToWait = new Date(new Date().getTime() + 5*60000);\r\n    //       this.setState({timeWaiting: timeToWait})\r\n    \r\n    //     }\r\n  \r\n    //     if(this.state.retry !== \"\" && this.state.timeWaiting !== new Date() && email <= this.state.email){\r\n    //         this.setState({retry: 'Sorry, You must wait 5 minutes before retrying with the same email address'})\r\n    //     }\r\n    //   }\r\n\r\n}\r\n\r\nexport default Validate","import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nimport Validate from '../helpers/validate'\r\nimport { SaveDataInDb } from '../helpers/func';\r\n\r\n\r\n\r\nexport default class Register extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            formValid: false,\r\n            ipAddress: null,\r\n            registered: false\r\n        }\r\n    }\r\n\r\n    componentDidMount (){\r\n        $.ajax({\r\n            type: \"GET\",\r\n            url: 'https://ipapi.co/json/',\r\n            cache: false,\r\n            success: (res) => {\r\n                this.setState({ipAddress: res.ip})\r\n                console.log(this.state.ipAddress)\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    sendEmail = (receiver, subject, msg) => {\r\n        axios.get(`https://techmybrand.com/sendmail.php?msg=${msg}&subject=${subject}&reciever=${receiver}`)\r\n          .then(response => {\r\n            console.log(response.data)\r\n          })\r\n      }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        $('#PasswordChecker').hide();\r\n        let email = this.refs.email.value\r\n        let password = this.refs.password.value\r\n        let val = Validate(password, email)\r\n        \r\n        if(val.Valid){\r\n            $('#PasswordChecker li').css({color : \"#09ff00\", fontWeight : 'normal', fontStyle : 'normal'})\r\n            \r\n            if(this.handleConfirmPasswordChange){\r\n                // save data in db\r\n                let data = { \"email\" : email, \"password\" : password, \"ipAddress\" : this.state.ipAddress, \"status\" : 'unsuccessful' }\r\n                \r\n                // check if user has already registered with this email\r\n\r\n                axios.post('/api/auth', {\"email\" : email} )\r\n                .then(response => {\r\n                    console.log(response.data)\r\n                    if(response.data.length > 0){\r\n                        console.log('duplicate email')\r\n                        this.setState({\r\n                            email: email,\r\n                            password: password,\r\n                            attempts: this.state.attempts + 1,\r\n                            err: 'Email address is already registered'\r\n                        })\r\n                        $('#validateErrors').html('<div className=\"alert alert-danger\">Email has already been registered!</div>')\r\n                    }else{\r\n                        SaveDataInDb(data)\r\n                        // save to localStorage as well\r\n                        localStorage.setItem(\"app_reg_data\", JSON.stringify(data))\r\n                        this.setState({ ipAddress: data.ipAddress, registered: true })\r\n                        this.sendEmail(email, 'Welcome Aboard New User!', 'You just signup on our test app via this email address. Thanks for being a part of us.')\r\n                        console.log('registered')\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            }\r\n        }else{\r\n            $('#validateErrors').html('<div className=\"alert alert-danger\">Please check the errors below</div>')\r\n            $('#PasswordChecker').show()\r\n\r\n        }\r\n    }\r\n\r\n    handleChange = () => {\r\n        $('#PasswordChecker').show();\r\n        let email = ''\r\n        let password = this.refs.password.value\r\n        let val = Validate(password, email)\r\n\r\n        if(!val.Valid){\r\n            $('#PasswordChecker').show();\r\n            if(val.PasswordLength === '') {\r\n                $('.LengthCheck').css({color : \"#09ff00\", fontWeight : 'normal', fontStyle : 'normal'})\r\n            }else{\r\n                $('.LengthCheck').css({color : \"#ff0000\", fontWeight : '300', fontStyle : 'italic'})\r\n            }\r\n        \r\n            if(val.ContainsSymbol === ''){\r\n                $('.SymbolsCheck').css({color : \"#09ff00\", fontWeight : 'normal', fontStyle : 'normal'})\r\n            }else{\r\n                $('.SymbolsCheck').css({color : \"#ff0000\", fontWeight : '300', fontStyle : 'italic'})\r\n            }\r\n        \r\n            if(val.ContainsUpperCase === ''){\r\n                $('.UpperCaseCheck').css({color : \"#09ff00\", fontWeight : 'normal', fontStyle : 'normal'})\r\n            }else{\r\n                $('.UpperCaseCheck').css({color : \"#ff0000\", fontWeight : '300', fontStyle : 'italic'})\r\n            }\r\n        \r\n            if(val.ContainsLowerCase === ''){\r\n                $('.LowerCaseCheck').css({color : \"#09ff00\", fontWeight : 'normal', fontStyle : 'normal'})\r\n            }else{\r\n                $('.LowerCaseCheck').css({color : \"#ff0000\", fontWeight : '300', fontStyle : 'italic'})\r\n            }\r\n\r\n            if(val.ContainsNumber === ''){\r\n                $('.NumbersCheck').css({color : \"#09ff00\", fontWeight : 'normal', fontStyle : 'normal'})\r\n            }else{\r\n                $('.NumbersCheck').css({color : \"#ff0000\", fontWeight : '300', fontStyle : 'italic'})\r\n            } \r\n        }else{\r\n            $('#PasswordChecker li').css({color : \"#09ff00\", fontWeight : 'normal', fontStyle : 'normal'})\r\n        }\r\n    }\r\n\r\n    handleConfirmPasswordChange = () => {\r\n        if(this.refs.cpassword.value !== this.refs.password.value){\r\n            $('#ConfirmPasswordCheck').text('Your password does not match')\r\n            return false\r\n        }\r\n        $('#ConfirmPasswordCheck').text('Great! your password matches').css({color: '#09ff00', fontWeight : 'normal', fontStyle : 'normal'})\r\n        return true\r\n    }\r\n\r\n    render() {\r\n        if (this.state.registered === true){\r\n           return <Redirect to=\"/\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 ml-auto mr-auto mt-4\">\r\n                        <div className=\"card\" style={{marginTop: '50px', padding: 30, borderRadius: 20}}>\r\n                            <div className=\"card-title\">\r\n                                <h4 className=\"card-heading text-center\">Welcome, Please signup!</h4>\r\n                                <hr/>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div id=\"validateErrors\"></div>\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <fieldset>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Email</label>\r\n                                            <input type=\"email\" className=\"form-control\" required ref=\"email\" placeholder=\"Email address\"/>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Password</label>\r\n                                            <input type=\"password\" onChange={this.handleChange} className=\"form-control\" required ref=\"password\" placeholder=\"Password\"/>\r\n                                            <small>\r\n                                                <ul id=\"PasswordChecker\" style={{display: \"none\"}}>\r\n                                                    <li className=\"LengthCheck\">Your password must be of 16 characters</li>\r\n                                                    <li className=\"SymbolsCheck\">Must contain at least 2 sysmbols</li>\r\n                                                    <li className=\"UpperCaseCheck\">The first two characters must be Uppercase</li>\r\n                                                    <li className=\"LowerCaseCheck\">Must contain lowercase letters</li>\r\n                                                    <li className=\"NumbersCheck\">Must contain at 3 numbers</li> \r\n                                                </ul>\r\n                                            </small>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Confirm Password</label>\r\n                                            <input type=\"password\" onChange={this.handleConfirmPasswordChange} className=\"form-control\" ref=\"cpassword\" required placeholder=\"Retype Password\"/>\r\n                                            <small id=\"ConfirmPasswordCheck\"></small>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                        <input type=\"submit\" className=\"btn btn-primary btn-block\" />\r\n                                        </div>\r\n                                    </fieldset>\r\n\r\n                                </form>\r\n                                <Link to=\"/\" style={{color: \"#007bff\", textDecoration: \"none\"}}>Already have an ID? Login now</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\n function GetIPAddress () {\r\n    fetch('https://ipapi.co/json/')\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      //console.log(response.ip)\r\n      return response.ip\r\n    })\r\n  }\r\n\r\n function SaveDataInDb(data){\r\n  axios.post('/api/insert', data)\r\n          .then(res => console.log(res.data));\r\n}\r\n\r\nexport { GetIPAddress, SaveDataInDb }","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport $ from 'jquery'\r\n\r\n\r\n\r\nexport default class Login extends Component {\r\n\r\n  constructor(){\r\n    super()\r\n    \r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      attempts: 0,\r\n      ipAddress: '',\r\n      timeWaiting: '',\r\n      err: '',\r\n      retry: false,\r\n      loginSuccess: false\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    $.ajax({\r\n        type: \"GET\",\r\n        url: 'https://ipapi.co/json/',\r\n        cache: false,\r\n        success: (res) => {\r\n            this.setState({ipAddress: res.ip})\r\n           // console.log(this.state.ipAddress)\r\n        }\r\n    })\r\n  }\r\n\r\n  sendEmail = (receiver, subject, msg) => {\r\n    axios.get(`https://techmybrand.com/sendmail.php?msg=${msg}&subject=${subject}&reciever=${receiver}`)\r\n      .then(response => {\r\n        console.log(response.data)\r\n      })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    let email = this.refs.email.value\r\n    let password = this.refs.password.value\r\n    let attempts;\r\n    sessionStorage.setItem('retry', false)\r\n\r\n    let credentials = { \"email\" : email, \"password\" : password }\r\n\r\n    axios.post('/api/auth', credentials)\r\n      .then(response => {\r\n  \r\n       if(response.data.length > 0){\r\n            this.setState({ loginSuccess: true })\r\n            attempts = 0\r\n            console.log(response.data)\r\n            sessionStorage.setItem(\"attempts\", 0)\r\n            this.sendEmail(email, 'Successful login', 'You have just logged in to your account on our test app. It are happy to have you back');\r\n            localStorage.setItem('userData', JSON.stringify(response.data))\r\n        }else{\r\n          if(sessionStorage.getItem(\"attempts\") !== null){\r\n             attempts =  sessionStorage.getItem(\"attempts\")\r\n          }else{\r\n            sessionStorage.setItem('attempts', '0')\r\n            attempts =  sessionStorage.getItem(\"attempts\")\r\n          }\r\n            \r\n            attempts = parseInt(attempts) + 1\r\n            sessionStorage.setItem(\"attempts\", attempts)\r\n            attempts = sessionStorage.getItem('attempts')\r\n            let timeToWait = sessionStorage.getItem('timeWaiting') === null ? new Date(Date.now() + 5*60000) : sessionStorage.getItem('timeWaiting')\r\n            sessionStorage.setItem(\"timeWaiting\", timeToWait)\r\n            if(parseInt(sessionStorage.getItem('attempts')) >= 3){\r\n              timeToWait = new Date(Date.now() + 5*60000)\r\n              console.log(true)\r\n                this.setState({retry: true, timeWaiting: timeToWait})\r\n                this.sendEmail(email, 'Failed Login Attempt', 'Someone has had 3 failed attempts trying to login using your email');\r\n                console.log(sessionStorage.getItem(\"timeWaiting\"))\r\n                sessionStorage.setItem(\"retry\", true)\r\n                if((new Date(sessionStorage.getItem('timeWaiting')).getMinutes() - new Date().getMinutes()) < 0)\r\n                {\r\n                  console.log(true)\r\n                    timeToWait = null \r\n                    sessionStorage.setItem(\"attempts\", 0)\r\n                    sessionStorage.setItem(\"timeWaiting\", null)\r\n                    sessionStorage.setItem(\"retry\", false)\r\n                    this.setState({retry: false, err: '', timeWaiting: timeToWait})  \r\n                }else{\r\n                  console.log(true)\r\n                    timeToWait = new Date(sessionStorage.getItem(\"timeWaiting\"))\r\n                    sessionStorage.setItem(\"attempts\", attempts)\r\n                    // sessionStorage.setItem(\"timeWaiting\", timeToWait)\r\n                    sessionStorage.setItem(\"retry\", true)\r\n                    this.setState({retry: true, err: '', timeWaiting: timeToWait})\r\n                }\r\n            }else{\r\n                let data = { \r\n                    email: email, \r\n                    attempts: sessionStorage.getItem(\"attempts\"), \r\n                    ipAddress: this.state.ipAddress,\r\n                    timeWaiting: sessionStorage.getItem(\"timeWaiting\"),\r\n                    status: 'unsuccessful'\r\n                }\r\n                this.setState(data)\r\n                this.setState({err: 'Your email or password is not correct'})\r\n\r\n                // update database record for this user\r\n                axios.post(`/api/update/${email}`, data)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                    })\r\n            }\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n          console.log(error);\r\n      }) \r\n  }\r\n \r\n  render() {\r\n    if((new Date(sessionStorage.getItem('timeWaiting')).getMinutes() - new Date().getMinutes()) < 0){\r\n      sessionStorage.setItem(\"retry\", false);\r\n     \r\n    }\r\n    \r\n    if(this.state.err !== ''){\r\n        $('#ValidateErrors').html(`<div className=\"alert alert-warning\"> ${this.state.err} </div>`)\r\n    }\r\n    if(sessionStorage.getItem(\"retry\") === \"true\"){\r\n        const timeLeft = new Date(sessionStorage.getItem('timeWaiting')).getMinutes() - new Date().getMinutes()\r\n        $('#ValidateErrors').html(`<div className=\"alert alert-danger\"> You must wait  ${timeLeft} minute(s) more before retrying </div>`)\r\n    }\r\n    if(this.state.loginSuccess){\r\n        $('#ValidateErrors').html(`<div className=\"alert alert-success\"> Login successful... </div>`)\r\n       return <Redirect to=\"/home\"/>\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n              <div className=\"col-md-5 ml-auto mr-auto mt-4\">\r\n                  <div className=\"card\" style={{marginTop: '50px', padding: 30, borderRadius: 20}}>\r\n                      <div className=\"card-title\">\r\n                          <h4 className=\"card-heading text-center\">Welcome, Please login!</h4>\r\n                          <hr/>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div id=\"ValidateErrors\"></div>\r\n          \r\n                <form onSubmit={this.handleSubmit}>\r\n                    <fieldset>\r\n                          <div className=\"form-group\">\r\n                              <label>Email</label>\r\n                              <input type=\"email\" className=\"form-control\" required ref=\"email\" placeholder=\"Email address\"/>\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                              <label>Password</label>\r\n                              <input type=\"password\" className=\"form-control\" required ref=\"password\" placeholder=\"Password\"/>\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block\" />\r\n                          </div>\r\n                      </fieldset>\r\n                  </form>\r\n                  <Link to=\"/register\" style={{color: \"#007bff\", textDecoration: \"none\"}}>Don't have an ID? Register now</Link>\r\n                </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nexport default class Home extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            data: '',\r\n            loggedIn: false\r\n        }\r\n\r\n        this.Logout = this.Logout.bind(this)\r\n    }\r\n\r\n    componentWillMount(){\r\n        \r\n        let data = localStorage.getItem('userData')\r\n        data = JSON.parse(data)\r\n        console.log(data)\r\n        if(data !== null){\r\n            this.setState({ data: data, loggedIn: true})\r\n            \r\n        }\r\n            \r\n    }\r\n\r\n    componentDidMount(){\r\n        //console.log(this.state.data[0]._id)\r\n    }\r\n\r\n    Logout(){\r\n        localStorage.clear()\r\n        this.setState({ data: '', loggedIn: false})\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.loggedIn){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 ml-auto mr-auto mt-4\">\r\n                        <div className=\"card\" style={{marginTop: '50px', padding: 30, borderRadius: 20}}>\r\n                            <div className=\"card-title\">\r\n                                <h3 className=\"card-heading\">Welcome, Home</h3>\r\n                                <span className=\"btn btn-primary btn-sm btn-rounded\"\r\n                                        style={{float: 'right'}}\r\n                                        onClick={this.Logout}> \r\n                                    Logout \r\n                                </span>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <p className=\"lead\">\r\n                                    Hello user {this.state.data[0]._id}, thank you for your time.\r\n                                    your account details is as follows:\r\n                                </p>\r\n                                <ul style={{listStyleType: 'none'}}>\r\n                                    <li>Email: {this.state.data[0].email}</li>\r\n                                    <li>Last loggedIn Ip: {this.state.data[0].ipAddress}</li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport Register from './register'\r\nimport Login from './login'\r\nimport Home from './home'\r\n\r\n\r\nexport default class PageRouter extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Login} />\r\n                    <Route path=\"/register\" component={Register} />\r\n                    <Route path=\"/home\" component={Home} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","import React, {Fragment, Component } from 'react'\nimport PageRouter from './components/pageRouter'\n\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <PageRouter />\n      </Fragment>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}